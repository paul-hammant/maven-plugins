 ------
 Configuring Custom Javadoc Tags
 ------
 Vincent Siveton
 Maria Odea Ching
 ------
 2009-09-12
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Configuring Custom Javadoc Tags

 To configure any custom tags, use {{{../javadoc-mojo.html#tags}\<tags/\>}} parameter as shown below. Each tag will
 be consist of a \<name/\>, a \<placement/\> and a \<head/\>. The \<placement/\> should be a combination of the
 letters Xaoptcmf:

  * X (disable tag)

  * a (all)

  * o (overview)

  * p (packages)

  * t (types, that is classes and interfaces)

  * c (constructors)

  * m (methods)

  * f (fields)

  []

 For instance, with the following configuration:

+-----+
<project>
  ...
  <reporting> (or <build>)
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${project.version}</version>
        <configuration>
          ...
          <tags>
            <tag>
              <name>todo</name>
              <!-- todo tag for all places -->
              <placement>a</placement>
              <head>To do something:</head>
            </tag>
          </tags>
          ...
        </configuration>
      </plugin>
    </plugins>
    ...
  </reporting> (or </build>)
  ...
</project>
+-----+

  and with the following todo tag in a class:

+-----+
/**
 * Hello world!
 *
 * @todo complete me!
 */
public class App {}
+-----+

  the Javadoc tool will generate the following Javadoc:

+-----+
public class App
extends Object

Hello world!

To do something:
    complete me!
+-----+